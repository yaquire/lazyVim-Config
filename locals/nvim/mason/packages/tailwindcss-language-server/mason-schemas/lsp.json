{"title":"Tailwind CSS IntelliSense","properties":{"tailwindCSS.rootFontSize":{"type":"number","default":16,"markdownDescription":"Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`."},"tailwindCSS.suggestions":{"type":"boolean","default":true,"markdownDescription":"Enable autocomplete suggestions.","scope":"language-overridable"},"tailwindCSS.inspectPort":{"type":["number","null"],"default":null,"markdownDescription":"Enable the Node.js inspector agent for the language server and listen on the specified port."},"tailwindCSS.hovers":{"type":"boolean","default":true,"markdownDescription":"Enable hovers.","scope":"language-overridable"},"tailwindCSS.codeActions":{"type":"boolean","default":true,"markdownDescription":"Enable code actions.","scope":"language-overridable"},"tailwindCSS.colorDecorators":{"type":"boolean","default":true,"markdownDescription":"Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.","scope":"language-overridable"},"tailwindCSS.validate":{"type":"boolean","default":true,"markdownDescription":"Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings","scope":"language-overridable"},"tailwindCSS.lint.cssConflict":{"markdownDescription":"Class names on the same HTML element which apply the same CSS property or properties","type":"string","default":"warning","scope":"language-overridable","enum":["ignore","warning","error"]},"tailwindCSS.lint.invalidApply":{"markdownDescription":"Unsupported use of the [`@apply` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#apply)","type":"string","default":"error","scope":"language-overridable","enum":["ignore","warning","error"]},"tailwindCSS.lint.invalidScreen":{"markdownDescription":"Unknown screen name used with the [`@screen` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#screen)","type":"string","default":"error","scope":"language-overridable","enum":["ignore","warning","error"]},"tailwindCSS.emmetCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`"},"tailwindcss-intellisense.trace.server":{"description":"Traces the communication between VS Code and the Tailwind CSS Language Server.","type":"string","default":"off","scope":"window","enum":["off","messages","verbose"]},"tailwindCSS.lint.invalidConfigPath":{"markdownDescription":"Unknown or invalid path used with the [`theme` helper](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#theme)","type":"string","default":"error","scope":"language-overridable","enum":["ignore","warning","error"]},"tailwindCSS.files.exclude":{"type":"array","default":["**\/.git\/**","**\/node_modules\/**","**\/.hg\/**","**\/.svn\/**"],"items":{"type":"string"},"markdownDescription":"Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting."},"tailwindCSS.lint.invalidTailwindDirective":{"markdownDescription":"Unknown value used with the [`@tailwind` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#tailwind)","type":"string","default":"error","scope":"language-overridable","enum":["ignore","warning","error"]},"tailwindCSS.includeLanguages":{"type":"object","default":{},"additionalProperties":{"type":"string"},"markdownDescription":"Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`"},"tailwindCSS.lint.recommendedVariantOrder":{"markdownDescription":"Class variants not in the recommended order (applies in [JIT mode](https:\/\/tailwindcss.com\/docs\/just-in-time-mode) only)","type":"string","default":"warning","scope":"language-overridable","enum":["ignore","warning","error"]},"tailwindCSS.lint.invalidVariant":{"markdownDescription":"Unknown variant name used with the [`@variants` directive](https:\/\/tailwindcss.com\/docs\/functions-and-directives\/#variants)","type":"string","default":"error","scope":"language-overridable","enum":["ignore","warning","error"]},"tailwindCSS.experimental.classRegex":{"type":"array","scope":"language-overridable"},"tailwindCSS.experimental.configFile":{"type":["null","string","object"],"default":null,"markdownDescription":"Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to."},"tailwindCSS.classAttributes":{"type":"array","default":["class","className","ngClass","class:list"],"items":{"type":"string"},"markdownDescription":"The HTML attributes for which to provide class completions, hover previews, linting etc."},"tailwindCSS.showPixelEquivalents":{"type":"boolean","default":true,"markdownDescription":"Show `px` equivalents for `rem` CSS values."}}}